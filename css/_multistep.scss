@import 'vars.scss';
@import 'base.scss';

@mixin setBorder($property: border, $value: 1px solid $c-black, $radius: $border-radius) {
  #{$property}: $value;
  border-radius: $radius;
}

@mixin setMargin($property: margin, $value: 1.5rem) {
  #{$property}: $value;
}

@mixin setPadding($property: padding, $value: .3rem .5rem) {
  #{$property}: $value;
}

@mixin setText($value: bold $fs-low $ff, $transform: none, $letter-spacing: $l-spacing) {
  font: $value;
  text-transform: $transform;
  letter-spacing: $letter-spacing;
}

.multistep {
  @include setText;
  position: relative;
  background: transparent;
  z-index: 999;

  &-header {
    @include setText(bold .8rem $ff, uppercase);
    text-align: center;
    position: absolute;
    top: -25%;
    left: 50%;
    transform: translateX(-50%);

    ul {
      list-style: none;
      display: flex;
      gap: 3rem;
    }

    &__elem {
      counter-increment: step 1;
      
      &::before {
        @include setBorder;
        @include setMargin(margin, 0 auto .5rem);
        content: counter(step);
        display: block;
        width: 2rem;
        line-height: 2rem;
        transition: background-color .3s;
      }

      &--active::before {
        background: $c-accent-light;
      }
    }
  }

  &-form {
    @include setBorder;
    @include setMargin(padding);
    box-shadow: -$shadow-size-medium $shadow-size-medium black;
    position: relative;
    overflow: hidden;
    min-height: 400px;
  }

  &-buttons {
    @include setPadding(padding, 1.5rem);
    display: flex;
    justify-content: space-between;
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 0;
  }

  &__button {
    @include setBorder;
    @include setPadding;
    @include setText(bold $fs-medium $ff, capitalize);
    background: none;
    box-shadow: 0 $shadow-size-medium black;
    cursor: pointer;
    transition: background-color .3s;

    &:hover {
      background: $c-accent-light;
      transform: translateY($shadow-effect-size);
      box-shadow: 0 $shadow-size-medium - $shadow-effect-size;
    }

    &--hide {
      visibility: hidden;
    }
  }
}

.card {
  @include setBorder(border, none);
  display: grid;
  position: absolute;
  opacity: 0;
  width: 100%;
  transform: translateX(100%);
  transition: transform .5s,  opacity .3s;

  &__header {
    @include setMargin(margin-block);
    @include setText(bold $fs-heigh $ff, uppercase);
    text-align: center;
  }

  &--active {
    position: relative;
    opacity: 1;
    transform: translateX(0);
  }

  label {
    @include setText(bold $fs-medium $ff, capitalize);
    margin-block: .5rem;
    display: inline-block;
  }

  input {
    @include setBorder;
    @include setPadding;
    @include setText($fs-low $ff);
  }
}